
wsock32.dll:     file format pei-i386
wsock32.dll
architecture: i386, flags 0x0000010b:
HAS_RELOC, EXEC_P, HAS_DEBUG, D_PAGED
start address 0x71bb1060

Characteristics 0x210e
	executable
	line numbers stripped
	symbols stripped
	32 bit words
	DLL

Time/Date		Tue Mar 25 09:43:26 2003
Magic			010b	(PE32)
MajorLinkerVersion	7
MinorLinkerVersion	10
SizeOfCode		00002400
SizeOfInitializedData	00003000
SizeOfUninitializedData	00000000
AddressOfEntryPoint	00001060
BaseOfCode		00001000
BaseOfData		00004000
ImageBase		71bb0000
SectionAlignment	00001000
FileAlignment		00000200
MajorOSystemVersion	5
MinorOSystemVersion	2
MajorImageVersion	5
MinorImageVersion	2
MajorSubsystemVersion	4
MinorSubsystemVersion	10
Win32Version		00000000
SizeOfImage		00009000
SizeOfHeaders		00000400
CheckSum		00011e19
Subsystem		00000003	(Windows CUI)
DllCharacteristics	00000400
SizeOfStackReserve	00040000
SizeOfStackCommit	00001000
SizeOfHeapReserve	00100000
SizeOfHeapCommit	00001000
LoaderFlags		00000000
NumberOfRvaAndSizes	00000010

The Data Directory
Entry 0 00001210 00001d5d Export Directory [.edata (or where ever we found it)]
Entry 1 00003124 0000003c Import Directory [parts of .idata]
Entry 2 00005000 00002ae8 Resource Directory [.rsrc]
Entry 3 00000000 00000000 Exception Directory [.pdata]
Entry 4 00000000 00000000 Security Directory
Entry 5 00008000 00000054 Base Relocation Directory [.reloc]
Entry 6 00003294 00000038 Debug Directory
Entry 7 00000000 00000000 Description Directory
Entry 8 00000000 00000000 Special Directory
Entry 9 00000000 00000000 Thread Storage Directory [.tls]
Entry a 00000000 00000000 Load Configuration Directory
Entry b 00000270 00000044 Bound Import Directory
Entry c 00001000 0000003c Import Address Table Directory
Entry d 00000000 00000000 Delay Import Directory
Entry e 00000000 00000000 CLR Runtime Header
Entry f 00000000 00000000 Reserved

There is an import table in .text at 0x71bb3124

The Import Tables (interpreted .text section contents)
 vma:            Hint    Time      Forward  DLL       First
                 Table   Stamp     Chain    Name      Thunk
 00003124	0000317c ffffffff ffffffff 00003160 00001000

	DLL Name: KERNEL32.dll
	vma:  Hint/Ord Member-Name Bound-To
	31b8	  797  SetLastError	77f45bb4
	31c8	  132  DisableThreadLibraryCalls	77e4cc1e
	31e4	  408  GetProcAddress	77e42dfb
	31f6	  375  GetModuleHandleA	77e42cd1
	320a	  665  QueryPerformanceCounter	77e425d8
	3224	  469  GetTickCount	77e4193e
	3234	  318  GetCurrentThreadId	77e419f7
	324a	  315  GetCurrentProcessId	77e41d40
	3260	  448  GetSystemTimeAsFileTime	77e41e46

 00003138	000031a4 ffffffff ffffffff 0000316e 00001028

	DLL Name: WS2_32.dll
	vma:  Hint/Ord Member-Name Bound-To
	327a	   54  WSARecvFrom	71c0fef0
	80000007	    7  <none>	71c11c40
	80000015	   21  <none>	71c01450
	3288	   52  WSARecv	71c012f0

 0000314c	00000000 00000000 00000000 00000000 00000000

There is an export table in .text at 0x71bb1210

The Export Tables (interpreted .text section contents)

Export Flags 			0
Time/Date stamp 		3e800c7a
Major/Minor 			0/0
Name 				000025d2 WSOCK32.dll
Ordinal Base 			1
Number in:
	Export Address Table 		00000476
	[Name Pointer/Ordinal] Table	0000004b
Table Addresses
	Export Address Table 		00001238
	Name Pointer Table 		00002410
	Ordinal Table 			0000253c

Export Address Table -- Ordinal Base 1
	[   0] +base[   1] 2d2b Forwarder RVA -- ws2_32.accept
	[   1] +base[   2] 2d39 Forwarder RVA -- ws2_32.bind
	[   2] +base[   3] 2d45 Forwarder RVA -- ws2_32.closesocket
	[   3] +base[   4] 2d58 Forwarder RVA -- ws2_32.connect
	[   4] +base[   5] 2dcb Forwarder RVA -- ws2_32.getpeername
	[   5] +base[   6] 2e36 Forwarder RVA -- ws2_32.getsockname
	[   6] +base[   7] 11c6 Export RVA
	[   7] +base[   8] 2e49 Forwarder RVA -- ws2_32.htonl
	[   8] +base[   9] 2e56 Forwarder RVA -- ws2_32.htons
	[   9] +base[  10] 2e63 Forwarder RVA -- ws2_32.inet_addr
	[  10] +base[  11] 2e89 Forwarder RVA -- ws2_32.inet_ntoa
	[  11] +base[  12] 2e9a Forwarder RVA -- ws2_32.ioctlsocket
	[  12] +base[  13] 2ead Forwarder RVA -- ws2_32.listen
	[  13] +base[  14] 2ebb Forwarder RVA -- ws2_32.ntohl
	[  14] +base[  15] 2ec8 Forwarder RVA -- ws2_32.ntohs
	[  15] +base[  16] 1120 Export RVA
	[  16] +base[  17] 309a Export RVA
	[  17] +base[  18] 2f13 Forwarder RVA -- ws2_32.select
	[  18] +base[  19] 2f21 Forwarder RVA -- ws2_32.send
	[  19] +base[  20] 2f2d Forwarder RVA -- ws2_32.sendto
	[  20] +base[  21] 1187 Export RVA
	[  21] +base[  22] 2f4f Forwarder RVA -- ws2_32.shutdown
	[  22] +base[  23] 2f5f Forwarder RVA -- ws2_32.socket
	[  23] +base[  24] 2ac6 Forwarder RVA -- MSWSOCK.MigrateWinsockConfiguration
	[  50] +base[  51] 2d79 Forwarder RVA -- ws2_32.gethostbyaddr
	[  51] +base[  52] 2d8e Forwarder RVA -- ws2_32.gethostbyname
	[  52] +base[  53] 2dde Forwarder RVA -- ws2_32.getprotobyname
	[  53] +base[  54] 2df4 Forwarder RVA -- ws2_32.getprotobynumber
	[  54] +base[  55] 2e0c Forwarder RVA -- ws2_32.getservbyname
	[  55] +base[  56] 2e21 Forwarder RVA -- ws2_32.getservbyport
	[  56] +base[  57] 2da3 Forwarder RVA -- ws2_32.gethostname
	[ 100] +base[ 101] 2bfd Forwarder RVA -- ws2_32.WSAAsyncSelect
	[ 101] +base[ 102] 2b4b Forwarder RVA -- ws2_32.WSAAsyncGetHostByAddr
	[ 102] +base[ 103] 2b68 Forwarder RVA -- ws2_32.WSAAsyncGetHostByName
	[ 103] +base[ 104] 2ba3 Forwarder RVA -- ws2_32.WSAAsyncGetProtoByNumber
	[ 104] +base[ 105] 2b85 Forwarder RVA -- ws2_32.WSAAsyncGetProtoByName
	[ 105] +base[ 106] 2be0 Forwarder RVA -- ws2_32.WSAAsyncGetServByPort
	[ 106] +base[ 107] 2bc3 Forwarder RVA -- ws2_32.WSAAsyncGetServByName
	[ 107] +base[ 108] 2c13 Forwarder RVA -- ws2_32.WSACancelAsyncRequest
	[ 108] +base[ 109] 2c9d Forwarder RVA -- ws2_32.WSASetBlockingHook
	[ 109] +base[ 110] 2ce0 Forwarder RVA -- ws2_32.WSAUnhookBlockingHook
	[ 110] +base[ 111] 2c5f Forwarder RVA -- ws2_32.WSAGetLastError
	[ 111] +base[ 112] 2cb7 Forwarder RVA -- ws2_32.WSASetLastError
	[ 112] +base[ 113] 2c30 Forwarder RVA -- ws2_32.WSACancelBlockingCall
	[ 113] +base[ 114] 2c76 Forwarder RVA -- ws2_32.WSAIsBlocking
	[ 114] +base[ 115] 2cce Forwarder RVA -- ws2_32.WSAStartup
	[ 115] +base[ 116] 2c4d Forwarder RVA -- ws2_32.WSACleanup
	[ 150] +base[ 151] 2d17 Forwarder RVA -- ws2_32.__WSAFDIsSet
	[ 499] +base[ 500] 2b40 Forwarder RVA -- ws2_32.WEP
	[ 999] +base[1000] 2cfd Forwarder RVA -- ws2_32.WSApSetPostRoutine
	[1099] +base[1100] 2e74 Forwarder RVA -- MSWSOCK.inet_network
	[1100] +base[1101] 2db6 Forwarder RVA -- MSWSOCK.getnetbyname
	[1101] +base[1102] 2ed5 Forwarder RVA -- MSWSOCK.rcmd
	[1102] +base[1103] 2ee2 Forwarder RVA -- MSWSOCK.rexec
	[1103] +base[1104] 2ef0 Forwarder RVA -- MSWSOCK.rresvport
	[1104] +base[1105] 2f3b Forwarder RVA -- MSWSOCK.sethostname
	[1105] +base[1106] 2d67 Forwarder RVA -- MSWSOCK.dn_expand
	[1106] +base[1107] 2c8b Forwarder RVA -- MSWSOCK.WSARecvEx
	[1107] +base[1108] 2f02 Forwarder RVA -- MSWSOCK.s_perror
	[1108] +base[1109] 2a0e Forwarder RVA -- MSWSOCK.GetAddressByNameA
	[1109] +base[1110] 2a28 Forwarder RVA -- MSWSOCK.GetAddressByNameW
	[1110] +base[1111] 29c3 Forwarder RVA -- MSWSOCK.EnumProtocolsA
	[1111] +base[1112] 29da Forwarder RVA -- MSWSOCK.EnumProtocolsW
	[1112] +base[1113] 2a98 Forwarder RVA -- MSWSOCK.GetTypeByNameA
	[1113] +base[1114] 2aaf Forwarder RVA -- MSWSOCK.GetTypeByNameW
	[1114] +base[1115] 2a42 Forwarder RVA -- MSWSOCK.GetNameByTypeA
	[1115] +base[1116] 2a59 Forwarder RVA -- MSWSOCK.GetNameByTypeW
	[1116] +base[1117] 2b03 Forwarder RVA -- MSWSOCK.SetServiceA
	[1117] +base[1118] 2b17 Forwarder RVA -- MSWSOCK.SetServiceW
	[1118] +base[1119] 2a70 Forwarder RVA -- MSWSOCK.GetServiceA
	[1119] +base[1120] 2a84 Forwarder RVA -- MSWSOCK.GetServiceW
	[1129] +base[1130] 2aea Forwarder RVA -- MSWSOCK.NPLoadNameSpaces
	[1139] +base[1140] 2b2b Forwarder RVA -- MSWSOCK.TransmitFile
	[1140] +base[1141] 29b2 Forwarder RVA -- MSWSOCK.AcceptEx
	[1141] +base[1142] 29f1 Forwarder RVA -- MSWSOCK.GetAcceptExSockaddrs

[Ordinal/Name Pointer] Table
	[1140] AcceptEx
	[1110] EnumProtocolsA
	[1111] EnumProtocolsW
	[1141] GetAcceptExSockaddrs
	[1108] GetAddressByNameA
	[1109] GetAddressByNameW
	[1114] GetNameByTypeA
	[1115] GetNameByTypeW
	[1118] GetServiceA
	[1119] GetServiceW
	[1112] GetTypeByNameA
	[1113] GetTypeByNameW
	[  23] MigrateWinsockConfiguration
	[1129] NPLoadNameSpaces
	[1116] SetServiceA
	[1117] SetServiceW
	[1139] TransmitFile
	[ 499] WEP
	[ 101] WSAAsyncGetHostByAddr
	[ 102] WSAAsyncGetHostByName
	[ 104] WSAAsyncGetProtoByName
	[ 103] WSAAsyncGetProtoByNumber
	[ 106] WSAAsyncGetServByName
	[ 105] WSAAsyncGetServByPort
	[ 100] WSAAsyncSelect
	[ 107] WSACancelAsyncRequest
	[ 112] WSACancelBlockingCall
	[ 115] WSACleanup
	[ 110] WSAGetLastError
	[ 113] WSAIsBlocking
	[1106] WSARecvEx
	[ 108] WSASetBlockingHook
	[ 111] WSASetLastError
	[ 114] WSAStartup
	[ 109] WSAUnhookBlockingHook
	[ 999] WSApSetPostRoutine
	[ 150] __WSAFDIsSet
	[   0] accept
	[   1] bind
	[   2] closesocket
	[   3] connect
	[1105] dn_expand
	[  50] gethostbyaddr
	[  51] gethostbyname
	[  56] gethostname
	[1100] getnetbyname
	[   4] getpeername
	[  52] getprotobyname
	[  53] getprotobynumber
	[  54] getservbyname
	[  55] getservbyport
	[   5] getsockname
	[   6] getsockopt
	[   7] htonl
	[   8] htons
	[   9] inet_addr
	[1099] inet_network
	[  10] inet_ntoa
	[  11] ioctlsocket
	[  12] listen
	[  13] ntohl
	[  14] ntohs
	[1101] rcmd
	[  15] recv
	[  16] recvfrom
	[1102] rexec
	[1103] rresvport
	[1107] s_perror
	[  17] select
	[  18] send
	[  19] sendto
	[1104] sethostname
	[  20] setsockopt
	[  21] shutdown
	[  22] socket


PE File Base Relocations (interpreted .reloc section contents)

Virtual Address: 00001000 Chunk size 40 (0x28) Number of fixups 16
	reloc    0 offset   6d [106d] HIGHLOW
	reloc    1 offset   88 [1088] HIGHLOW
	reloc    2 offset   9e [109e] HIGHLOW
	reloc    3 offset   aa [10aa] HIGHLOW
	reloc    4 offset   b2 [10b2] HIGHLOW
	reloc    5 offset   ba [10ba] HIGHLOW
	reloc    6 offset   c6 [10c6] HIGHLOW
	reloc    7 offset   d4 [10d4] HIGHLOW
	reloc    8 offset   df [10df] HIGHLOW
	reloc    9 offset   e5 [10e5] HIGHLOW
	reloc   10 offset   ef [10ef] HIGHLOW
	reloc   11 offset   f6 [10f6] HIGHLOW
	reloc   12 offset   fb [10fb] HIGHLOW
	reloc   13 offset  16e [116e] HIGHLOW
	reloc   14 offset  17e [117e] HIGHLOW
	reloc   15 offset  209 [1209] HIGHLOW

Virtual Address: 00002000 Chunk size 12 (0xc) Number of fixups 2
	reloc    0 offset  faa [2faa] HIGHLOW
	reloc    1 offset    0 [2000] ABSOLUTE

Virtual Address: 00003000 Chunk size 32 (0x20) Number of fixups 12
	reloc    0 offset   32 [3032] HIGHLOW
	reloc    1 offset   6f [306f] HIGHLOW
	reloc    2 offset   eb [30eb] HIGHLOW
	reloc    3 offset   fd [30fd] HIGHLOW
	reloc    4 offset  101 [3101] HIGHLOW
	reloc    5 offset  105 [3105] HIGHLOW
	reloc    6 offset  109 [3109] HIGHLOW
	reloc    7 offset  10d [310d] HIGHLOW
	reloc    8 offset  111 [3111] HIGHLOW
	reloc    9 offset  115 [3115] HIGHLOW
	reloc   10 offset  119 [3119] HIGHLOW
	reloc   11 offset  11d [311d] HIGHLOW

There is a debug directory in .text at 0x71bb3294

Type                Size     Rva      Offset
  2        CodeView 0000001c 000032e0 000026e0
(format NB10 signature 7a0c803e age 2)

The .rsrc Resource Directory section:
000  Type Table: Char: 0, Time: 00000000, Ver: 0/0, Num Names: 0, IDs: 2
010   Entry: ID: 0x00000b, Value: 0x80000020
020    Name Table: Char: 0, Time: 00000000, Ver: 0/0, Num Names: 0, IDs: 1
030     Entry: ID: 0x000001, Value: 0x80000050
050      Language Table: Char: 0, Time: 00000000, Ver: 0/0, Num Names: 0, IDs: 1
060       Entry: ID: 0x000409, Value: 0x000080
080        Leaf: Addr: 0x005430, Size: 0x0026b4, Codepage: 0
018   Entry: ID: 0x000010, Value: 0x80000038
038    Name Table: Char: 0, Time: 00000000, Ver: 0/0, Num Names: 0, IDs: 1
048     Entry: ID: 0x000001, Value: 0x80000068
068      Language Table: Char: 0, Time: 00000000, Ver: 0/0, Num Names: 0, IDs: 1
078       Entry: ID: 0x000409, Value: 0x000090
090        Leaf: Addr: 0x0050a0, Size: 0x00038c, Codepage: 0
 Resources start at offset: 0x430

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000022fc  71bb1000  71bb1000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  71bb4000  71bb4000  00002800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .rsrc         00002ae8  71bb5000  71bb5000  00002a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .reloc        00000054  71bb8000  71bb8000  00005600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
SYMBOL TABLE:
no symbols


