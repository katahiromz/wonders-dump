
wsock32.dll:     file format pei-i386
wsock32.dll
architecture: i386, flags 0x00000103:
HAS_RELOC, EXEC_P, D_PAGED
start address 0x00000000

Characteristics 0x230e
	executable
	line numbers stripped
	symbols stripped
	32 bit words
	debugging information removed
	DLL

Time/Date		Wed Dec 08 17:15:40 1999
Magic			010b	(PE32)
MajorLinkerVersion	5
MinorLinkerVersion	12
SizeOfCode		00002200
SizeOfInitializedData	00005000
SizeOfUninitializedData	00000000
AddressOfEntryPoint	00000000
BaseOfCode		00001000
BaseOfData		00004000
ImageBase		74fb0000
SectionAlignment	00001000
FileAlignment		00000200
MajorOSystemVersion	5
MinorOSystemVersion	0
MajorImageVersion	5
MinorImageVersion	0
MajorSubsystemVersion	4
MinorSubsystemVersion	10
Win32Version		00000000
SizeOfImage		0000a000
SizeOfHeaders		00000400
CheckSum		0000c3f1
Subsystem		00000003	(Windows CUI)
DllCharacteristics	00000000
SizeOfStackReserve	00040000
SizeOfStackCommit	00001000
SizeOfHeapReserve	00100000
SizeOfHeapCommit	00001000
LoaderFlags		00000000
NumberOfRvaAndSizes	00000010

The Data Directory
Entry 0 00001240 00001d5d Export Directory [.edata (or where ever we found it)]
Entry 1 00002f9d 00000056 Import Directory [parts of .idata]
Entry 2 00004000 00004dac Resource Directory [.rsrc]
Entry 3 00000000 00000000 Exception Directory [.pdata]
Entry 4 00000000 00000000 Security Directory
Entry 5 00009000 00000028 Base Relocation Directory [.reloc]
Entry 6 00003038 0000001c Debug Directory
Entry 7 00000000 00000000 Description Directory
Entry 8 00000000 00000000 Special Directory
Entry 9 00000000 00000000 Thread Storage Directory [.tls]
Entry a 00000000 00000000 Load Configuration Directory
Entry b 00000238 00000030 Bound Import Directory
Entry c 00001000 0000001c Import Address Table Directory
Entry d 00000000 00000000 Delay Import Directory
Entry e 00000000 00000000 CLR Runtime Header
Entry f 00000000 00000000 Reserved

There is an import table in .text at 0x74fb2f9d

The Import Tables (interpreted .text section contents)
 vma:            Hint    Time      Forward  DLL       First
                 Table   Stamp     Chain    Name      Thunk
 00002f9d	00002ff3 ffffffff ffffffff 00002fd9 00001000

	DLL Name: KERNEL32.DLL
	vma:  Hint/Ord Member-Name Bound-To
	3010	  668  SetLastError	77e6c4e4

 00002fb1	00002ffb ffffffff ffffffff 00002fe7 00001008

	DLL Name: WS2_32.DLL
	vma:  Hint/Ord Member-Name Bound-To
	80000015	   21  <none>	74f93947
	3020	   48  WSARecv	74f92b6a
	302a	   50  WSARecvFrom	74f9accb
	80000007	    7  <none>	74f92d4e

 00002fc5	00000000 00000000 00000000 00000000 00000000

There is an export table in .text at 0x74fb1240

The Export Tables (interpreted .text section contents)

Export Flags 			0
Time/Date stamp 		380679eb
Major/Minor 			0/0
Name 				00002602 WSOCK32.dll
Ordinal Base 			1
Number in:
	Export Address Table 		00000476
	[Name Pointer/Ordinal] Table	0000004b
Table Addresses
	Export Address Table 		00001268
	Name Pointer Table 		000024d6
	Ordinal Table 			00002440

Export Address Table -- Ordinal Base 1
	[   0] +base[   1] 2d5b Forwarder RVA -- ws2_32.accept
	[   1] +base[   2] 2d69 Forwarder RVA -- ws2_32.bind
	[   2] +base[   3] 2d75 Forwarder RVA -- ws2_32.closesocket
	[   3] +base[   4] 2d88 Forwarder RVA -- ws2_32.connect
	[   4] +base[   5] 2dfb Forwarder RVA -- ws2_32.getpeername
	[   5] +base[   6] 2e66 Forwarder RVA -- ws2_32.getsockname
	[   6] +base[   7] 1104 Export RVA
	[   7] +base[   8] 2e79 Forwarder RVA -- ws2_32.htonl
	[   8] +base[   9] 2e86 Forwarder RVA -- ws2_32.htons
	[   9] +base[  10] 2e93 Forwarder RVA -- ws2_32.inet_addr
	[  10] +base[  11] 2eb9 Forwarder RVA -- ws2_32.inet_ntoa
	[  11] +base[  12] 2eca Forwarder RVA -- ws2_32.ioctlsocket
	[  12] +base[  13] 2edd Forwarder RVA -- ws2_32.listen
	[  13] +base[  14] 2eeb Forwarder RVA -- ws2_32.ntohl
	[  14] +base[  15] 2ef8 Forwarder RVA -- ws2_32.ntohs
	[  15] +base[  16] 10b2 Export RVA
	[  16] +base[  17] 101c Export RVA
	[  17] +base[  18] 2f43 Forwarder RVA -- ws2_32.select
	[  18] +base[  19] 2f51 Forwarder RVA -- ws2_32.send
	[  19] +base[  20] 2f5d Forwarder RVA -- ws2_32.sendto
	[  20] +base[  21] 1073 Export RVA
	[  21] +base[  22] 2f7f Forwarder RVA -- ws2_32.shutdown
	[  22] +base[  23] 2f8f Forwarder RVA -- ws2_32.socket
	[  23] +base[  24] 2af6 Forwarder RVA -- MSWSOCK.MigrateWinsockConfiguration
	[  50] +base[  51] 2da9 Forwarder RVA -- ws2_32.gethostbyaddr
	[  51] +base[  52] 2dbe Forwarder RVA -- ws2_32.gethostbyname
	[  52] +base[  53] 2e0e Forwarder RVA -- ws2_32.getprotobyname
	[  53] +base[  54] 2e24 Forwarder RVA -- ws2_32.getprotobynumber
	[  54] +base[  55] 2e3c Forwarder RVA -- ws2_32.getservbyname
	[  55] +base[  56] 2e51 Forwarder RVA -- ws2_32.getservbyport
	[  56] +base[  57] 2dd3 Forwarder RVA -- ws2_32.gethostname
	[ 100] +base[ 101] 2c2d Forwarder RVA -- ws2_32.WSAAsyncSelect
	[ 101] +base[ 102] 2b7b Forwarder RVA -- ws2_32.WSAAsyncGetHostByAddr
	[ 102] +base[ 103] 2b98 Forwarder RVA -- ws2_32.WSAAsyncGetHostByName
	[ 103] +base[ 104] 2bd3 Forwarder RVA -- ws2_32.WSAAsyncGetProtoByNumber
	[ 104] +base[ 105] 2bb5 Forwarder RVA -- ws2_32.WSAAsyncGetProtoByName
	[ 105] +base[ 106] 2c10 Forwarder RVA -- ws2_32.WSAAsyncGetServByPort
	[ 106] +base[ 107] 2bf3 Forwarder RVA -- ws2_32.WSAAsyncGetServByName
	[ 107] +base[ 108] 2c43 Forwarder RVA -- ws2_32.WSACancelAsyncRequest
	[ 108] +base[ 109] 2ccd Forwarder RVA -- ws2_32.WSASetBlockingHook
	[ 109] +base[ 110] 2d10 Forwarder RVA -- ws2_32.WSAUnhookBlockingHook
	[ 110] +base[ 111] 2c8f Forwarder RVA -- ws2_32.WSAGetLastError
	[ 111] +base[ 112] 2ce7 Forwarder RVA -- ws2_32.WSASetLastError
	[ 112] +base[ 113] 2c60 Forwarder RVA -- ws2_32.WSACancelBlockingCall
	[ 113] +base[ 114] 2ca6 Forwarder RVA -- ws2_32.WSAIsBlocking
	[ 114] +base[ 115] 2cfe Forwarder RVA -- ws2_32.WSAStartup
	[ 115] +base[ 116] 2c7d Forwarder RVA -- ws2_32.WSACleanup
	[ 150] +base[ 151] 2d47 Forwarder RVA -- ws2_32.__WSAFDIsSet
	[ 499] +base[ 500] 2b70 Forwarder RVA -- ws2_32.WEP
	[ 999] +base[1000] 2d2d Forwarder RVA -- ws2_32.WSApSetPostRoutine
	[1099] +base[1100] 2ea4 Forwarder RVA -- MSWSOCK.inet_network
	[1100] +base[1101] 2de6 Forwarder RVA -- MSWSOCK.getnetbyname
	[1101] +base[1102] 2f05 Forwarder RVA -- MSWSOCK.rcmd
	[1102] +base[1103] 2f12 Forwarder RVA -- MSWSOCK.rexec
	[1103] +base[1104] 2f20 Forwarder RVA -- MSWSOCK.rresvport
	[1104] +base[1105] 2f6b Forwarder RVA -- MSWSOCK.sethostname
	[1105] +base[1106] 2d97 Forwarder RVA -- MSWSOCK.dn_expand
	[1106] +base[1107] 2cbb Forwarder RVA -- MSWSOCK.WSARecvEx
	[1107] +base[1108] 2f32 Forwarder RVA -- MSWSOCK.s_perror
	[1108] +base[1109] 2a3e Forwarder RVA -- MSWSOCK.GetAddressByNameA
	[1109] +base[1110] 2a58 Forwarder RVA -- MSWSOCK.GetAddressByNameW
	[1110] +base[1111] 29f3 Forwarder RVA -- MSWSOCK.EnumProtocolsA
	[1111] +base[1112] 2a0a Forwarder RVA -- MSWSOCK.EnumProtocolsW
	[1112] +base[1113] 2ac8 Forwarder RVA -- MSWSOCK.GetTypeByNameA
	[1113] +base[1114] 2adf Forwarder RVA -- MSWSOCK.GetTypeByNameW
	[1114] +base[1115] 2a72 Forwarder RVA -- MSWSOCK.GetNameByTypeA
	[1115] +base[1116] 2a89 Forwarder RVA -- MSWSOCK.GetNameByTypeW
	[1116] +base[1117] 2b33 Forwarder RVA -- MSWSOCK.SetServiceA
	[1117] +base[1118] 2b47 Forwarder RVA -- MSWSOCK.SetServiceW
	[1118] +base[1119] 2aa0 Forwarder RVA -- MSWSOCK.GetServiceA
	[1119] +base[1120] 2ab4 Forwarder RVA -- MSWSOCK.GetServiceW
	[1129] +base[1130] 2b1a Forwarder RVA -- MSWSOCK.NPLoadNameSpaces
	[1139] +base[1140] 2b5b Forwarder RVA -- MSWSOCK.TransmitFile
	[1140] +base[1141] 29e2 Forwarder RVA -- MSWSOCK.AcceptEx
	[1141] +base[1142] 2a21 Forwarder RVA -- MSWSOCK.GetAcceptExSockaddrs

[Ordinal/Name Pointer] Table
	[1140] AcceptEx
	[1110] EnumProtocolsA
	[1111] EnumProtocolsW
	[1141] GetAcceptExSockaddrs
	[1108] GetAddressByNameA
	[1109] GetAddressByNameW
	[1114] GetNameByTypeA
	[1115] GetNameByTypeW
	[1118] GetServiceA
	[1119] GetServiceW
	[1112] GetTypeByNameA
	[1113] GetTypeByNameW
	[  23] MigrateWinsockConfiguration
	[1129] NPLoadNameSpaces
	[1116] SetServiceA
	[1117] SetServiceW
	[1139] TransmitFile
	[ 499] WEP
	[ 101] WSAAsyncGetHostByAddr
	[ 102] WSAAsyncGetHostByName
	[ 104] WSAAsyncGetProtoByName
	[ 103] WSAAsyncGetProtoByNumber
	[ 106] WSAAsyncGetServByName
	[ 105] WSAAsyncGetServByPort
	[ 100] WSAAsyncSelect
	[ 107] WSACancelAsyncRequest
	[ 112] WSACancelBlockingCall
	[ 115] WSACleanup
	[ 110] WSAGetLastError
	[ 113] WSAIsBlocking
	[1106] WSARecvEx
	[ 108] WSASetBlockingHook
	[ 111] WSASetLastError
	[ 114] WSAStartup
	[ 109] WSAUnhookBlockingHook
	[ 999] WSApSetPostRoutine
	[ 150] __WSAFDIsSet
	[   0] accept
	[   1] bind
	[   2] closesocket
	[   3] connect
	[1105] dn_expand
	[  50] gethostbyaddr
	[  51] gethostbyname
	[  56] gethostname
	[1100] getnetbyname
	[   4] getpeername
	[  52] getprotobyname
	[  53] getprotobynumber
	[  54] getservbyname
	[  55] getservbyport
	[   5] getsockname
	[   6] getsockopt
	[   7] htonl
	[   8] htons
	[   9] inet_addr
	[1099] inet_network
	[  10] inet_ntoa
	[  11] ioctlsocket
	[  12] listen
	[  13] ntohl
	[  14] ntohs
	[1101] rcmd
	[  15] recv
	[  16] recvfrom
	[1102] rexec
	[1103] rresvport
	[1107] s_perror
	[  17] select
	[  18] send
	[  19] sendto
	[1104] sethostname
	[  20] setsockopt
	[  21] shutdown
	[  22] socket


PE File Base Relocations (interpreted .reloc section contents)

Virtual Address: 00001000 Chunk size 40 (0x28) Number of fixups 16
	reloc    0 offset   6f [106f] HIGHLOW
	reloc    1 offset   ae [10ae] HIGHLOW
	reloc    2 offset  100 [1100] HIGHLOW
	reloc    3 offset  136 [1136] HIGHLOW
	reloc    4 offset  1ba [11ba] HIGHLOW
	reloc    5 offset  1e0 [11e0] HIGHLOW
	reloc    6 offset  1e4 [11e4] HIGHLOW
	reloc    7 offset  1e8 [11e8] HIGHLOW
	reloc    8 offset  1ec [11ec] HIGHLOW
	reloc    9 offset  1f0 [11f0] HIGHLOW
	reloc   10 offset  1f4 [11f4] HIGHLOW
	reloc   11 offset  1f8 [11f8] HIGHLOW
	reloc   12 offset  1fc [11fc] HIGHLOW
	reloc   13 offset  20f [120f] HIGHLOW
	reloc   14 offset  22f [122f] HIGHLOW
	reloc   15 offset    0 [1000] ABSOLUTE

There is a debug directory in .text at 0x74fb3038

Type                Size     Rva      Offset
  4            Misc 00000110 00000000 00007600

The .rsrc Resource Directory section:
000  Type Table: Char: 0, Time: 00000000, Ver: 4/0, Num Names: 0, IDs: 2
010   Entry: ID: 0x00000b, Value: 0x80000020
020    Name Table: Char: 0, Time: 00000000, Ver: 4/0, Num Names: 0, IDs: 1
030     Entry: ID: 0x000001, Value: 0x80000050
050      Language Table: Char: 0, Time: 00000000, Ver: 4/0, Num Names: 0, IDs: 2
060       Entry: ID: 0x000409, Value: 0x000090
090        Leaf: Addr: 0x0040d0, Size: 0x0026b4, Codepage: 1252
068       Entry: ID: 0x000411, Value: 0x0000a0
0a0        Leaf: Addr: 0x006784, Size: 0x001f54, Codepage: 1252
018   Entry: ID: 0x000010, Value: 0x80000038
038    Name Table: Char: 0, Time: 00000000, Ver: 4/0, Num Names: 0, IDs: 1
048     Entry: ID: 0x000001, Value: 0x80000070
070      Language Table: Char: 0, Time: 00000000, Ver: 4/0, Num Names: 0, IDs: 2
080       Entry: ID: 0x000409, Value: 0x0000b0
0b0        Leaf: Addr: 0x0086d8, Size: 0x000364, Codepage: 1252
088       Entry: ID: 0x000411, Value: 0x0000c0
0c0        Leaf: Addr: 0x008a3c, Size: 0x000370, Codepage: 1252

WARNING: Extra data in .rsrc section - it will be ignored by Windows:
4dad  Type Table: Char: 1229210689, Time: 5858474e, Ver: 16720/17476, Num Names: 20041, IDs: 20551
4dbd   Entry: <corrupt string offset: 0x49444441>
Corrupt .rsrc section detected!
 Resources start at offset: 0xd0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000020fc  74fb1000  74fb1000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rsrc         00004e00  74fb4000  74fb4000  00002600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .reloc        00000028  74fb9000  74fb9000  00007400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
SYMBOL TABLE:
no symbols


